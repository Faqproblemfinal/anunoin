name: ARM64 GCC-+LLD Build

on:
  push:
    paths:
      - ".github/workflows/main.yml"
  workflow_dispatch:
  
jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        sudo apt-get update
        sudo apt-get install -y axel flex bison ncurses-dev texinfo gcc gperf patch libtool automake g++ libncurses5-dev gawk subversion expat libexpat1-dev python-all-dev binutils-dev bc libcap-dev autoconf libgmp-dev build-essential pkg-config libmpc-dev libmpfr-dev autopoint gettext txt2man liblzma-dev libssl-dev libz-dev mercurial wget tar gcc-10 g++-10 cmake ninja-build zstd lz4 liblz4-tool liblz4-dev lzma --fix-broken --fix-missing
        
    - name: Set build date
      id: get-date
      run: |
        sudo timedatectl set-timezone Asia/Kolkata
        echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")
        
    - name: Build & Push
      run: |
        alias gcc=gcc-10
        alias g++=g++-10
        git config --global user.name "${GITHUB_USER}"
        git config --global user.email "${GITHUB_EMAIL}"
        git clone https://"${GITHUB_USER}":"${GITHUB_TOKEN}"@github.com/Faqproblemfinal/gcc-arm64 ../gcc-arm64 -b master
        rm -rf ../gcc-arm64/*
        chmod a+x build-*.sh
        ./build-gcc.sh -a arm64
        script_dir=$(pwd)
        cd ../gcc-arm64
        ./bin/aarch64-elf-gcc -v 2>&1 | tee /tmp/gcc-version
        bash "$script_dir/strip-binaries.sh"
        git add . -f
        git commit -as -m "Import ARM64 GCC ${{ steps.get-date.outputs.date }}" -m "Build completed on: $(/bin/date)" -m "Configuration: $(/bin/cat /tmp/gcc-version)"
        git gc
        git push origin master -f
      env:
        GITHUB_EMAIL: ${{ secrets.EMAIL }}
        GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
        GITHUB_USER: ${{ secrets.USERNAME }}